setwd("R")
source('~/Documents/R/fda_work/fda/R/ycheck.R')
library()
library(fds)
help("fds")
data()
help("Electricityconsumption")
help("SAelectdemand")
load SAelectdemand
load("SAelectdemand")
plot(SAelectdemand)
class(SAelectdemand)
dim(SAelectdemand)
length(SAelectdemand)
help("SAelectdemand")
help("sfts")
names("SAelectdemand")
help("fts")
length(SAelectdemand$y)
170688/48
y = SAelectdemand$y
x = SAelectdemand$x
max(x)
x[1:96]
dim(x)
length(x)
y[1:96]
plot(1:96, y[1:96], type="p")
help("SAelectdemand")
7*48
plot(1:336, y[1:336], type="p")
plot(1:336, y[1:336], type="b")
class(y)
dim(y)
ymat = SAelectdemand$y
matplot(1:48,ymat[,1:2])
matplot(1:48, ymat[,1:7], type="b")
nweek = 4
m2 = 0
n2 = 0
par(ask=TRUE)
for (week in 1:nweek) {
m1 = m2 + 1
m2 = m2 + 48
n1 = n2 + 1
n2 = n2 + 7
matplot(1:48, ymat[,n1:n2], type="b", main=paste("week",week))
}
nweek = 12
n2 = 0
par(ask=TRUE)
for (week in 1:nweek) {
n1 = n2 + 1
n2 = n2 + 7
matplot(1:48, ymat[,n1:n2], type="b", xlim=c(0,48), ylim=c(900,1900), main=paste("week",week))
}
nweek = 12
n2 = 0
par(ask=TRUE)
for (week in 1:nweek) {
n1 = n2 + 1
n2 = n2 + 7
matplot(1:48, ymat[,n1:n2], type="b", xlim=c(0,48), ylim=c(800,1900), main=paste("week",week))
lines(c(24,24),c(800,1900), lty=2)
}
3556/7
rng = c(0,48)
nbasis = 51
ebasis = create.bspline.basis(rng, nbasis)
tobs = matrix((1:48) - 0.5,48,1)
lambda = 1e-4
efdPar = fdPar(ebasis, 2, lambda, )
library(fda)
rng = c(0,48)
nbasis = 51
ebasis = create.bspline.basis(rng, nbasis)
tobs = matrix((1:48) - 0.5,48,1)
lambda = 1e-4
efdPar = fdPar(ebasis, 2, lambda, )
yfd = smooth.basis(tobs, ymat, efdPar)
yfd = smooth.basis(tobs, ymat, efdPar)$fd
plotfit.fd(ymat, tobs, yfd)
loglam = seq(-4,2,7)
nloglam = length(loglam)
for (ilam in 1:nloglam) {
lambda = 10^loglam[ilam]
efdPar = fdPar(ebasis, 2, lambda)
fdsmooth  = smooth.basis(tobs, ymat, efdPar)
df[ilam]  = fdsmooth$df
gcv[ilam] = fdsmooth$gcv
}
names(fdsmooth)
loglam = seq(-4,2,7)
nloglam = length(loglam)
gcv = rep(0,nloglam)
df  = rep(0,nloglam)
for (ilam in 1:nloglam) {
lambda = 10^loglam[ilam]
efdPar = fdPar(ebasis, 2, lambda)
fdsmooth  = smooth.basis(tobs, ymat, efdPar)
df[ilam]  = fdsmooth$df
gcv[ilam] = fdsmooth$gcv
}
nloglam
loglam = seq(-4,2,len=7)
nloglam = length(loglam)
gcv = rep(0,nloglam)
df  = rep(0,nloglam)
nloglam
for (ilam in 1:nloglam) {
lambda = 10^loglam[ilam]
efdPar = fdPar(ebasis, 2, lambda)
fdsmooth  = smooth.basis(tobs, ymat, efdPar)
df[ilam]  = fdsmooth$df
gcv[ilam] = fdsmooth$gcv
}
fdsmooth$gcv
fdsmooth$df
loglam = seq(-4,2,len=7)
nloglam = length(loglam)
gcv = rep(0,nloglam)
df  = rep(0,nloglam)
for (ilam in 1:nloglam) {
lambda = 10^loglam[ilam]
efdPar = fdPar(ebasis, 2, lambda)
fdsmooth  = smooth.basis(tobs, ymat, efdPar)
df[ilam]  = fdsmooth$df
gcv[ilam] = sum(fdsmooth$gcv)
}
gcv
for (ilam in 1:nloglam) {
lambda = 10^loglam[ilam]
efdPar = fdPar(ebasis, 2, lambda)
fdsmooth  = smooth.basis(tobs, ymat, efdPar)
df[ilam]  = fdsmooth$df
gcv[ilam] = mean(fdsmooth$gcv)
}
gcv
loglam = seq(-4,0,0.5)
nloglam = length(loglam)
gcv = rep(0,nloglam)
df  = rep(0,nloglam)
for (ilam in 1:nloglam) {
lambda = 10^loglam[ilam]
efdPar = fdPar(ebasis, 2, lambda)
fdsmooth  = smooth.basis(tobs, ymat, efdPar)
df[ilam]  = fdsmooth$df
gcv[ilam] = mean(fdsmooth$gcv)
}
cbdind(df,gcv)
cbind(df,gcv)
round(cbind(loglam,df,gcv),1)
lambda = 1e-2
efdPar = fdPar(ebasis, 2, lambda)
yfd = smooth.basis(tobs, ymat, efdPar)$fd
plotfit.fd(ymat, tobs, yfd)
data(fds)
data("fds")
data("CanadianWeather")
data()
xmat = tempairport$y
dim(xmat)
xmat = tempkent$y
dim(xmat)
plot(mondaytempairport)
plot(mondaytempairport)
xmatMon = mondaytempairport$y
xmatTue = tuesdaytempairport$y
xmatWed = wednesdaytempairport$y
xmatThu = thursdaytempairport$y
xmatFri = fridaytempairport$y
xmatSat = saturdaytempairport$y
xmatSun = sundaytempairport$y
dim(xmatSun)
dim(xmatMon)
dim(xmatMon)
dim(xmatTue)
dim(xmatWed)
dim(xmatThu)
dim(xmatFri)
dim(xmatSat)
7*508
ymat[1,1]
mondemand[1,1]
mondaydemand$y[1,1]
sundaydemand$y[1,1]
loglam = seq(-4,0,0.5)
nloglam = length(loglam)
gcv = rep(0,nloglam)
df  = rep(0,nloglam)
for (ilam in 1:nloglam) {
lambda = 10^loglam[ilam]
efdPar = fdPar(ebasis, 2, lambda)
fdsmooth  = smooth.basis(tobs, sundaydemand$y, efdPar)
df[ilam]  = fdsmooth$df
gcv[ilam] = mean(fdsmooth$gcv)
}
round(cbind(loglam, df, gcv),1)
loglam = seq(-4,0,0.5)
nloglam = length(loglam)
gcv = rep(0,nloglam)
df  = rep(0,nloglam)
for (ilam in 1:nloglam) {
lambda = 10^loglam[ilam]
efdPar = fdPar(ebasis, 2, lambda)
fdsmooth  = smooth.basis(tobs, sundaytempairport$y, efdPar)
df[ilam]  = fdsmooth$df
gcv[ilam] = mean(fdsmooth$gcv)
}
round(cbind(loglam, df, gcv),1)
loglam = seq(-2,2,0.5)
nloglam = length(loglam)
gcv = rep(0,nloglam)
df  = rep(0,nloglam)
for (ilam in 1:nloglam) {
lambda = 10^loglam[ilam]
efdPar = fdPar(ebasis, 2, lambda)
fdsmooth  = smooth.basis(tobs, sundaytempairport$y, efdPar)
df[ilam]  = fdsmooth$df
gcv[ilam] = mean(fdsmooth$gcv)
}
round(cbind(loglam, df, gcv),2)
lambda = 10^loglam[5]
efdPar = fdPar(ebasis, 2, lambda)
sunelectfd = smooth.basis(tobs, sundaydemand$y, efdPar)
lambda = 10^loglam[4]
efdPar = fdPar(ebasis, 2, lambda)
suntempfd = smooth.basis(tobs, sundaytempairport$y, efdPar)
plotfit.fd(sundaytempairport$y, tobs, efdPar)
plotfit.fd(sundaytempairport$y, tobs, suntempfd)
class(suntempfd)
suntempfd = smooth.basis(tobs, sundaytempairport$y, efdPar)$fd
plotfit.fd(sundaytempairport$y, tobs, suntempfd)
plotfit.fd(sundaytempairport$y, tobs, suntempfd)
plotfit.fd(sundaydemand$y, tobs, sunelectfd)
lambda = 10^loglam[5]
efdPar = fdPar(ebasis, 2, lambda)
sunelectfd = smooth.basis(tobs, sundaydemand$y, efdPar)
plotfit.fd(sundaydemand$y, tobs, sunelectfd)
lambda = 10^loglam[5]
efdPar = fdPar(ebasis, 2, lambda)
sunelectfd = smooth.basis(tobs, sundaydemand$y, efdPar)$fd
plotfit.fd(sundaydemand$y, tobs, sunelectfd)
sundaytempairport[,2]
sundaytempairport$y[,2]
sundaytempairport$y[,6]
cbind(1:48,sundaytempairport$y[,9])
cbind(1:48,sundaytempairport$y[,9])
sundaytempairport$y[33,9] = 15
cbind(1:48,sundaytempairport$y[,11])
sundaytempairport$y[17,11] = 17
cbind(1:48,sundaytempairport$y[,31])
cbind(1:48,sundaytempairport$y[,37])
sundaytempairport$y[22,37] = 18
cbind(1:48,sundaytempairport$y[,46])
sundaytempairport$y[17,46] = 14
cbind(1:48,sundaytempairport$y[,64])
cbind(1:48,sundaytempairport$y[,79])
sundaytempairport$y[15,79] = 21.5
cbind(1:48,sundaytempairport$y[,90])
sundaytempairport$y[1,90] = 18.5
cbind(1:48,sundaytempairport$y[,92])
sundaytempairport$y[28:29,92] = c(20,20.5,21)
sundaytempairport$y[27:29,92] = c(20,20.5,21)
cbind(1:48,sundaytempairport$y[,145])
sundaytempairport$y[9,145] = 16.2
suntempmat = sundaytempairport$y
suntempmat = suntempmat[,-c(2,6,64,65,66)]
dim(suntempmat)
sunelectmat = sundaydemand$y
sunelectmat = sunelectmat[,-c(2,6,64,65,66)]
lambda = 10^loglam[4]
efdPar = fdPar(ebasis, 2, lambda)
suntempfd = smooth.basis(tobs, suntempmat, efdPar)$fd
lambda = 10^loglam[5]
efdPar = fdPar(ebasis, 2, lambda)
sunelectfd = smooth.basis(tobs, sunelectmat$, efdPar)$fd
lambda = 10^loglam[5]
efdPar = fdPar(ebasis, 2, lambda)
sunelectfd = smooth.basis(tobs, sunelectmat, efdPar)$fd
lambda = 10^-0.5
bfdPar = fdPar(bbasis, 2, lambda)
rng = c(0,48)
nbasis = 51
bbasis = create.bspline.basis(rng, nbasis)
lambda = 10^-0.5
bfdPar = fdPar(bbasis, 2, lambda)
xfdlist = vector("list",1)
xfdlist = suntempfd
betalist = vector("list",1)
betalist[[1]] = bfdPar
fRegressResult = fRegress(sunelectfd, xfdlist, betalist)
xfdlist = vector("list",1)
xfdlist[[1]] = suntempfd
fRegressResult = fRegress(sunelectfd, xfdlist, betalist)
betaest = fRegressResult$betaestlist[[1]]
plot(betaest)
yhatfd = fRegressResult$yhatfdobj
plot(yhatfd)
tfine = seq(0,48,201)
i=1
yveci = eval.fd(tfine, sunelectfd[i])
yhati = eval.fd(tgine, yhatfd[i])
plot(tfine, yveci, type="l")
yveci = eval.fd(tfine, sunelectfd[i])
yhati = eval.fd(tfine, yhatfd[i])
plot(tfine, yveci, type="l")
yhatfd = fRegressResult$yhatfd
class(yhatfd)
yhatfd = fRegressResult$yhatfd$fd
class(yhatfd)
yveci = eval.fd(tfine, sunelectfd[i])
yhati = eval.fd(tfine, yhatfd[i])
plot(tfine, yveci, type="l")
par(ask=FALSE)
yveci = eval.fd(tfine, sunelectfd[i])
yhati = eval.fd(tfine, yhatfd[i])
plot(tfine, yveci, type="l")
yveci
tfine = seq(0,48,len=201)
yveci = eval.fd(tfine, sunelectfd[i])
yhati = eval.fd(tfine, yhatfd[i])
plot(tfine, yveci, type="l")
lines(tfine, yhati, lty=2)
yveci = eval.fd(tfine, sunelectfd[i])
yhati = eval.fd(tfine, yhatfd[i])
matplot(tfine, cbind(yveciyhati), type="l")
yveci = eval.fd(tfine, sunelectfd[i])
yhati = eval.fd(tfine, yhatfd[i])
matplot(tfine, cbind(yveci,yhati), type="l")
tfine = seq(0,48,len=201)
par(ask=TRUE)
for (i in 1:503) {
yveci = eval.fd(tfine, sunelectfd[i])
yhati = eval.fd(tfine, yhatfd[i])
matplot(tfine, cbind(yveci,yhati), type="l")
}
xfdlist = vector("list",2)
xfdlist[[1]] = constfd
xfdlist[[2]] = suntempfd
betalist = vector("list",2)
betalist[[1]] = bfdPar
betalist[[2]] = bfdPar
fRegressResult = fRegress(sunelectfd, xfdlist, betalist)
class(constfd)
constfd = fd(1,cbasis)
cbasis  = create.constant.basis(rng)
constfd = fd(1,cbasis)
xfdlist = vector("list",2)
xfdlist[[1]] = constfd
xfdlist[[2]] = suntempfd
fRegressResult = fRegress(sunelectfd, xfdlist, betalist)
constfd = fd(matrix(1,1,503),cbasis)
xfdlist = vector("list",2)
xfdlist[[1]] = constfd
xfdlist[[2]] = suntempfd
betalist = vector("list",2)
betalist[[1]] = bfdPar
betalist[[2]] = bfdPar
fRegressResult = fRegress(sunelectfd, xfdlist, betalist)
betaestfd1 = fRegressResult$betaestlist[[1]]
betaestfd2 = fRegressResult$betaestlist[[2]]
plot(betaestfd1)
plot(betaestfd2)
yhatfd = fRegressResult$yhatfd$fd
tfine = seq(0,48,len=201)
par(ask=TRUE)
for (i in 1:503) {
yveci = eval.fd(tfine, sunelectfd[i])
yhati = eval.fd(tfine, yhatfd[i])
matplot(tfine, cbind(yveci,yhati), type="l")
}
par(ask=TRUE)
for (i in 1:503) {
yveci = eval.fd(tfine, sunelectfd[i])
yhati = eval.fd(tfine, yhatfd[i])
matplot(tfine, cbind(yveci,yhati), type="l", ylim=c(800,1600),
main=paste("Sunday",i))
}
par(ask=TRUE)
for (i in 1:503) {
yveci = eval.fd(tfine, sunelectfd[i])
yhati = eval.fd(tfine, yhatfd[i])
matplot(tfine, cbind(yveci,yhati), type="l", lty=1, col=c(1,2),
ylim=c(800,1600), main=paste("Sunday",i))
}
tfine = seq(0,48,len=201)
par(ask=TRUE)
for (i in 1:503) {
yveci = eval.fd(tfine, sunelectfd[i])
yhati = eval.fd(tfine, yhatfd[i])
matplot(tfine, cbind(yveci,yhati), type="l", lty=1, col=c(1,2),
ylim=c(800,1800), main=paste("Sunday",i))
}
par(mfrow = c(2,1), ask=FALSE)
plot(betaestfd1)
plot(betaestfd2)
par(mfrow=c(2,1), ask=FALSE)
plot(betaestfd1)
title("Intercept")
plot(betaestfd2)
title("Regression on temperature")
q()
